const { SolicitacaoAcesso } = require('../../../../models/SolicitacaoAcesso');
const { Usuario } = require('../../../../models/Usuario');
const chalk = require('chalk');

/**
 * Aprova uma solicita√ß√£o de acesso.
 * @param {number} idSolicitacao - ID da solicita√ß√£o.
 * @param {number} usuarioAprovadorId - ID do usu√°rio que aprovou.
 * @returns {Object} Mensagem de sucesso.
 */
async function aprovarSolicitacao(idSolicitacao, usuarioAprovadorId) {
  console.info(chalk.blue('üì• [Aprova√ß√£o de Solicita√ß√£o] Iniciando aprova√ß√£o da solicita√ß√£o...'));
  console.log(chalk.cyan(`üîë ID da Solicita√ß√£o: ${idSolicitacao}, ID do Usu√°rio Aprovador: ${usuarioAprovadorId}`));

  try {
    console.info(chalk.blue('üîç [Aprova√ß√£o de Solicita√ß√£o] Buscando solicita√ß√£o pendente...'));
    const solicitacao = await SolicitacaoAcesso.buscarPendente(idSolicitacao);

    if (!solicitacao) {
      console.warn(chalk.yellow('‚ö†Ô∏è [Aprova√ß√£o de Solicita√ß√£o] Solicita√ß√£o n√£o encontrada ou j√° processada.'));
      throw new Error('Solicita√ß√£o n√£o encontrada ou j√° processada.');
    }

    console.info(chalk.blue('‚úÖ [Aprova√ß√£o de Solicita√ß√£o] Solicita√ß√£o encontrada. Iniciando aprova√ß√£o...'));
    await solicitacao.aprovar(usuarioAprovadorId);
    console.info(chalk.green('‚úÖ [Aprova√ß√£o de Solicita√ß√£o] Solicita√ß√£o aprovada com sucesso.'));

    console.info(chalk.blue('üë§ [Cria√ß√£o de Usu√°rio] Criando novo usu√°rio com os dados aprovados...'));
    await Usuario.salvar(
      {
        nome: solicitacao.nome,
        sobrenome: solicitacao.sobrenome,
        email: solicitacao.email,
        senha: solicitacao.senha,
        perfil: solicitacao.perfil_solicitado,
        aprovadoPor: usuarioAprovadorId,
      },
      true // Usu√°rio ativo ap√≥s aprova√ß√£o
    );
    console.info(chalk.green('‚úÖ [Cria√ß√£o de Usu√°rio] Usu√°rio criado e ativado com sucesso.'));

    return { message: 'Solicita√ß√£o aprovada e usu√°rio criado com sucesso.' };
  } catch (erro) {
    console.error(chalk.red('‚ùå [Aprova√ß√£o de Solicita√ß√£o] Erro ao aprovar solicita√ß√£o.'));
    console.error(chalk.red(`üõë Detalhes do erro: ${erro.message}`));
    throw new Error('Erro ao aprovar solicita√ß√£o.');
  } finally {
    console.info(chalk.blue('üîÑ [Aprova√ß√£o de Solicita√ß√£o] Finalizando processo de aprova√ß√£o.'));
  }
}

module.exports = { aprovarSolicitacao };